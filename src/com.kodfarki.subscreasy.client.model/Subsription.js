/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.kodfarki.subscreasy.client.model/Company', 'com.kodfarki.subscreasy.client.model/Coupon', 'com.kodfarki.subscreasy.client.model/Offer', 'com.kodfarki.subscreasy.client.model/SavedCard', 'com.kodfarki.subscreasy.client.model/ServiceInstance'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Company'), require('./Coupon'), require('./Offer'), require('./SavedCard'), require('./ServiceInstance'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.Subsription = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.Company, root.ApiDocumentation.Coupon, root.ApiDocumentation.Offer, root.ApiDocumentation.SavedCard, root.ApiDocumentation.ServiceInstance);
  }
}(this, function(ApiClient, Company, Coupon, Offer, SavedCard, ServiceInstance) {
  'use strict';




  /**
   * The Subsription model module.
   * @module com.kodfarki.subscreasy.client.model/Subsription
   * @version 1.0
   */

  /**
   * Constructs a new <code>Subsription</code>.
   * @alias module:com.kodfarki.subscreasy.client.model/Subsription
   * @class
   * @param company {module:com.kodfarki.subscreasy.client.model/Company} 
   * @param offer {module:com.kodfarki.subscreasy.client.model/Offer} 
   */
  var exports = function(company, offer) {
    var _this = this;




    _this['company'] = company;



    _this['offer'] = offer;





  };

  /**
   * Constructs a <code>Subsription</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.kodfarki.subscreasy.client.model/Subsription} obj Optional instance to populate.
   * @return {module:com.kodfarki.subscreasy.client.model/Subsription} The populated <code>Subsription</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('appliedCoupon')) {
        obj['appliedCoupon'] = Coupon.constructFromObject(data['appliedCoupon']);
      }
      if (data.hasOwnProperty('cancelDate')) {
        obj['cancelDate'] = ApiClient.convertToType(data['cancelDate'], 'Date');
      }
      if (data.hasOwnProperty('card')) {
        obj['card'] = SavedCard.constructFromObject(data['card']);
      }
      if (data.hasOwnProperty('company')) {
        obj['company'] = Company.constructFromObject(data['company']);
      }
      if (data.hasOwnProperty('endDate')) {
        obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('nextChargingDate')) {
        obj['nextChargingDate'] = ApiClient.convertToType(data['nextChargingDate'], 'Date');
      }
      if (data.hasOwnProperty('offer')) {
        obj['offer'] = Offer.constructFromObject(data['offer']);
      }
      if (data.hasOwnProperty('services')) {
        obj['services'] = ApiClient.convertToType(data['services'], [ServiceInstance]);
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('subscriberId')) {
        obj['subscriberId'] = ApiClient.convertToType(data['subscriberId'], 'String');
      }
      if (data.hasOwnProperty('version')) {
        obj['version'] = ApiClient.convertToType(data['version'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {module:com.kodfarki.subscreasy.client.model/Coupon} appliedCoupon
   */
  exports.prototype['appliedCoupon'] = undefined;
  /**
   * @member {Date} cancelDate
   */
  exports.prototype['cancelDate'] = undefined;
  /**
   * @member {module:com.kodfarki.subscreasy.client.model/SavedCard} card
   */
  exports.prototype['card'] = undefined;
  /**
   * @member {module:com.kodfarki.subscreasy.client.model/Company} company
   */
  exports.prototype['company'] = undefined;
  /**
   * @member {Date} endDate
   */
  exports.prototype['endDate'] = undefined;
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Date} nextChargingDate
   */
  exports.prototype['nextChargingDate'] = undefined;
  /**
   * @member {module:com.kodfarki.subscreasy.client.model/Offer} offer
   */
  exports.prototype['offer'] = undefined;
  /**
   * @member {Array.<module:com.kodfarki.subscreasy.client.model/ServiceInstance>} services
   */
  exports.prototype['services'] = undefined;
  /**
   * @member {Date} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * @member {module:com.kodfarki.subscreasy.client.model/Subsription.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {String} subscriberId
   */
  exports.prototype['subscriberId'] = undefined;
  /**
   * @member {Number} version
   */
  exports.prototype['version'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "NEW"
     * @const
     */
    "NEW": "NEW",
    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",
    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",
    /**
     * value: "FINISHED"
     * @const
     */
    "FINISHED": "FINISHED",
    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"  };


  return exports;
}));


