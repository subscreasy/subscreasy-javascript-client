/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Company from './Company';

/**
 * The Service model module.
 * @module com.kodfarki.subscreasy.client.model/Service
 * @version 1.0.0
 */
class Service {
    /**
     * Constructs a new <code>Service</code>.
     * @alias module:com.kodfarki.subscreasy.client.model/Service
     * @param company {module:com.kodfarki.subscreasy.client.model/Company} 
     * @param name {String} 
     * @param type {module:com.kodfarki.subscreasy.client.model/Service.TypeEnum} 
     */
    constructor(company, name, type) { 
        
        Service.initialize(this, company, name, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, company, name, type) { 
        obj['company'] = company;
        obj['name'] = name;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Service</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.kodfarki.subscreasy.client.model/Service} obj Optional instance to populate.
     * @return {module:com.kodfarki.subscreasy.client.model/Service} The populated <code>Service</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Service();

            if (data.hasOwnProperty('company')) {
                obj['company'] = Company.constructFromObject(data['company']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Company} company
 */
Service.prototype['company'] = undefined;

/**
 * @member {Number} id
 */
Service.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Service.prototype['name'] = undefined;

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Service.TypeEnum} type
 */
Service.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Service['TypeEnum'] = {

    /**
     * value: "ONOFF"
     * @const
     */
    "ONOFF": "ONOFF",

    /**
     * value: "SEAT_BASED"
     * @const
     */
    "SEAT_BASED": "SEAT_BASED",

    /**
     * value: "USAGE_BASED"
     * @const
     */
    "USAGE_BASED": "USAGE_BASED"
};



export default Service;

