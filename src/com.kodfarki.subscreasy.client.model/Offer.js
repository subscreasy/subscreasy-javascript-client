/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Company from './Company';
import RecurrencePeriod from './RecurrencePeriod';

/**
 * The Offer model module.
 * @module com.kodfarki.subscreasy.client.model/Offer
 * @version 1.0.0
 */
class Offer {
    /**
     * Constructs a new <code>Offer</code>.
     * @alias module:com.kodfarki.subscreasy.client.model/Offer
     * @param company {module:com.kodfarki.subscreasy.client.model/Company} 
     * @param currency {module:com.kodfarki.subscreasy.client.model/Offer.CurrencyEnum} 
     * @param disablePaymentForm {Boolean} 
     * @param multiplePurchase {Boolean} 
     * @param name {String} 
     * @param openEnded {Boolean} 
     * @param price {Number} 
     */
    constructor(company, currency, disablePaymentForm, multiplePurchase, name, openEnded, price) { 
        
        Offer.initialize(this, company, currency, disablePaymentForm, multiplePurchase, name, openEnded, price);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, company, currency, disablePaymentForm, multiplePurchase, name, openEnded, price) { 
        obj['company'] = company;
        obj['currency'] = currency;
        obj['disablePaymentForm'] = disablePaymentForm;
        obj['multiplePurchase'] = multiplePurchase;
        obj['name'] = name;
        obj['openEnded'] = openEnded;
        obj['price'] = price;
    }

    /**
     * Constructs a <code>Offer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} obj Optional instance to populate.
     * @return {module:com.kodfarki.subscreasy.client.model/Offer} The populated <code>Offer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Offer();

            if (data.hasOwnProperty('company')) {
                obj['company'] = Company.constructFromObject(data['company']);
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('disablePaymentForm')) {
                obj['disablePaymentForm'] = ApiClient.convertToType(data['disablePaymentForm'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('imagePath')) {
                obj['imagePath'] = ApiClient.convertToType(data['imagePath'], 'String');
            }
            if (data.hasOwnProperty('multiplePurchase')) {
                obj['multiplePurchase'] = ApiClient.convertToType(data['multiplePurchase'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('openEnded')) {
                obj['openEnded'] = ApiClient.convertToType(data['openEnded'], 'Boolean');
            }
            if (data.hasOwnProperty('physicalProduct')) {
                obj['physicalProduct'] = ApiClient.convertToType(data['physicalProduct'], 'Boolean');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('recurrence')) {
                obj['recurrence'] = RecurrencePeriod.constructFromObject(data['recurrence']);
            }
            if (data.hasOwnProperty('recurrenceCount')) {
                obj['recurrenceCount'] = ApiClient.convertToType(data['recurrenceCount'], 'Number');
            }
            if (data.hasOwnProperty('renewalBillcycleBased')) {
                obj['renewalBillcycleBased'] = ApiClient.convertToType(data['renewalBillcycleBased'], 'Boolean');
            }
            if (data.hasOwnProperty('renewalType')) {
                obj['renewalType'] = ApiClient.convertToType(data['renewalType'], 'String');
            }
            if (data.hasOwnProperty('secureId')) {
                obj['secureId'] = ApiClient.convertToType(data['secureId'], 'String');
            }
            if (data.hasOwnProperty('trialPeriod')) {
                obj['trialPeriod'] = ApiClient.convertToType(data['trialPeriod'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Company} company
 */
Offer.prototype['company'] = undefined;

/**
 * @member {Date} createDate
 */
Offer.prototype['createDate'] = undefined;

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Offer.CurrencyEnum} currency
 */
Offer.prototype['currency'] = undefined;

/**
 * @member {String} description
 */
Offer.prototype['description'] = undefined;

/**
 * @member {Boolean} disablePaymentForm
 */
Offer.prototype['disablePaymentForm'] = undefined;

/**
 * @member {Number} id
 */
Offer.prototype['id'] = undefined;

/**
 * @member {String} imagePath
 */
Offer.prototype['imagePath'] = undefined;

/**
 * @member {Boolean} multiplePurchase
 */
Offer.prototype['multiplePurchase'] = undefined;

/**
 * @member {String} name
 */
Offer.prototype['name'] = undefined;

/**
 * @member {Boolean} openEnded
 */
Offer.prototype['openEnded'] = undefined;

/**
 * @member {Boolean} physicalProduct
 */
Offer.prototype['physicalProduct'] = undefined;

/**
 * @member {Number} price
 */
Offer.prototype['price'] = undefined;

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Offer.ProductTypeEnum} productType
 */
Offer.prototype['productType'] = undefined;

/**
 * @member {module:com.kodfarki.subscreasy.client.model/RecurrencePeriod} recurrence
 */
Offer.prototype['recurrence'] = undefined;

/**
 * @member {Number} recurrenceCount
 */
Offer.prototype['recurrenceCount'] = undefined;

/**
 * @member {Boolean} renewalBillcycleBased
 */
Offer.prototype['renewalBillcycleBased'] = undefined;

/**
 * @member {module:com.kodfarki.subscreasy.client.model/Offer.RenewalTypeEnum} renewalType
 */
Offer.prototype['renewalType'] = undefined;

/**
 * @member {String} secureId
 */
Offer.prototype['secureId'] = undefined;

/**
 * @member {Number} trialPeriod
 */
Offer.prototype['trialPeriod'] = undefined;





/**
 * Allowed values for the <code>currency</code> property.
 * @enum {String}
 * @readonly
 */
Offer['CurrencyEnum'] = {

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD"
};


/**
 * Allowed values for the <code>productType</code> property.
 * @enum {String}
 * @readonly
 */
Offer['ProductTypeEnum'] = {

    /**
     * value: "PHYSICAL"
     * @const
     */
    "PHYSICAL": "PHYSICAL",

    /**
     * value: "SERVICE"
     * @const
     */
    "SERVICE": "SERVICE"
};


/**
 * Allowed values for the <code>renewalType</code> property.
 * @enum {String}
 * @readonly
 */
Offer['RenewalTypeEnum'] = {

    /**
     * value: "BILLCYCLE"
     * @const
     */
    "BILLCYCLE": "BILLCYCLE",

    /**
     * value: "START_DATE"
     * @const
     */
    "START_DATE": "START_DATE"
};



export default Offer;

