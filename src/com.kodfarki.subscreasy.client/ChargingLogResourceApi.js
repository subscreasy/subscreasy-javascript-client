/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChargingLog from '../com.kodfarki.subscreasy.client.model/ChargingLog';

/**
* ChargingLogResource service.
* @module com.kodfarki.subscreasy.client/ChargingLogResourceApi
* @version 1.0.0
*/
export default class ChargingLogResourceApi {

    /**
    * Constructs a new ChargingLogResourceApi. 
    * @alias module:com.kodfarki.subscreasy.client/ChargingLogResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createChargingLogUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~createChargingLogUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createChargingLog
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} chargingLog chargingLog
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~createChargingLogUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    createChargingLogUsingPOST(chargingLog, callback) {
      let postBody = chargingLog;
      // verify the required parameter 'chargingLog' is set
      if (chargingLog === undefined || chargingLog === null) {
        throw new Error("Missing the required parameter 'chargingLog' when calling createChargingLogUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ChargingLog;
      return this.apiClient.callApi(
        '/api/charging-logs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChargingLogUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~deleteChargingLogUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteChargingLog
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~deleteChargingLogUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChargingLogUsingDELETE(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteChargingLogUsingDELETE");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/charging-logs/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllChargingLogsUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getAllChargingLogsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllChargingLogs
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getAllChargingLogsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getAllChargingLogsUsingGET(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChargingLogUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getChargingLog
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    getChargingLogUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getChargingLogUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ChargingLog;
      return this.apiClient.callApi(
        '/api/charging-logs/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChargingLogsByStatusUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogsByStatusUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getChargingLogsByStatus
     * @param {String} status status
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogsByStatusUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getChargingLogsByStatusUsingGET(status, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling getChargingLogsByStatusUsingGET");
      }

      let pathParams = {
        'status': status
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs/status/{status}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentsByMerchantSubscriberIdUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsByMerchantSubscriberIdUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getPaymentsByMerchantSubscriberId
     * @param {String} merchantSubscriberId merchantSubscriberId
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsByMerchantSubscriberIdUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getPaymentsByMerchantSubscriberIdUsingGET(merchantSubscriberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantSubscriberId' is set
      if (merchantSubscriberId === undefined || merchantSubscriberId === null) {
        throw new Error("Missing the required parameter 'merchantSubscriberId' when calling getPaymentsByMerchantSubscriberIdUsingGET");
      }

      let pathParams = {
        'merchantSubscriberId': merchantSubscriberId
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs/subscriber/m/{merchantSubscriberId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentsBySubscriberIdUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriberIdUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getPaymentsBySubscriberId
     * @param {Number} subscriberId subscriberId
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriberIdUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getPaymentsBySubscriberIdUsingGET(subscriberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriberId' is set
      if (subscriberId === undefined || subscriberId === null) {
        throw new Error("Missing the required parameter 'subscriberId' when calling getPaymentsBySubscriberIdUsingGET");
      }

      let pathParams = {
        'subscriberId': subscriberId
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs/subscriber/id/{subscriberId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentsBySubscriberIdUsingGET1 operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriberIdUsingGET1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getPaymentsBySubscriberId
     * @param {String} subscriberSecureId subscriberSecureId
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriberIdUsingGET1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getPaymentsBySubscriberIdUsingGET1(subscriberSecureId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriberSecureId' is set
      if (subscriberSecureId === undefined || subscriberSecureId === null) {
        throw new Error("Missing the required parameter 'subscriberSecureId' when calling getPaymentsBySubscriberIdUsingGET1");
      }

      let pathParams = {
        'subscriberSecureId': subscriberSecureId
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs/subscriber/{subscriberSecureId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentsBySubscriptionUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriptionUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getPaymentsBySubscription
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getPaymentsBySubscriptionUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    getPaymentsBySubscriptionUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getPaymentsBySubscriptionUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ChargingLog];
      return this.apiClient.callApi(
        '/api/charging-logs/subscription/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the refundUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~refundUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * refund
     * @param {Number} chargingLogId chargingLogId
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~refundUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    refundUsingPOST(chargingLogId, callback) {
      let postBody = null;
      // verify the required parameter 'chargingLogId' is set
      if (chargingLogId === undefined || chargingLogId === null) {
        throw new Error("Missing the required parameter 'chargingLogId' when calling refundUsingPOST");
      }

      let pathParams = {
        'chargingLogId': chargingLogId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ChargingLog;
      return this.apiClient.callApi(
        '/api/charging-logs/refund/{chargingLogId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChargingLogUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~updateChargingLogUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateChargingLog
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} chargingLog chargingLog
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~updateChargingLogUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    updateChargingLogUsingPUT(chargingLog, callback) {
      let postBody = chargingLog;
      // verify the required parameter 'chargingLog' is set
      if (chargingLog === undefined || chargingLog === null) {
        throw new Error("Missing the required parameter 'chargingLog' when calling updateChargingLogUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ChargingLog;
      return this.apiClient.callApi(
        '/api/charging-logs', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
