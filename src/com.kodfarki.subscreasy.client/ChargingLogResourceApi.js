/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.kodfarki.subscreasy.client.model/ChargingLog'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../com.kodfarki.subscreasy.client.model/ChargingLog'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.ChargingLogResourceApi = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.ChargingLog);
  }
}(this, function(ApiClient, ChargingLog) {
  'use strict';

  /**
   * ChargingLogResource service.
   * @module com.kodfarki.subscreasy.client/ChargingLogResourceApi
   * @version 1.0
   */

  /**
   * Constructs a new ChargingLogResourceApi. 
   * @alias module:com.kodfarki.subscreasy.client/ChargingLogResourceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createChargingLogUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~createChargingLogUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createChargingLog
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} chargingLog chargingLog
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~createChargingLogUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    this.createChargingLogUsingPOST = function(chargingLog, callback) {
      var postBody = chargingLog;

      // verify the required parameter 'chargingLog' is set
      if (chargingLog === undefined || chargingLog === null) {
        throw new Error("Missing the required parameter 'chargingLog' when calling createChargingLogUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ChargingLog;

      return this.apiClient.callApi(
        '/api/charging-logs', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChargingLogUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~deleteChargingLogUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteChargingLog
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~deleteChargingLogUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteChargingLogUsingDELETE = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteChargingLogUsingDELETE");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/charging-logs/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllChargingLogsUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getAllChargingLogsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllChargingLogs
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getAllChargingLogsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ChargingLog>}
     */
    this.getAllChargingLogsUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'size': opts['size'],
      };
      var collectionQueryParams = {
        'sort': {
          value: opts['sort'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [ChargingLog];

      return this.apiClient.callApi(
        '/api/charging-logs', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getChargingLogUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getChargingLog
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~getChargingLogUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    this.getChargingLogUsingGET = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getChargingLogUsingGET");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = ChargingLog;

      return this.apiClient.callApi(
        '/api/charging-logs/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the refundUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~refundUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * refund
     * @param {Number} chargingLogId chargingLogId
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~refundUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    this.refundUsingPOST = function(chargingLogId, callback) {
      var postBody = null;

      // verify the required parameter 'chargingLogId' is set
      if (chargingLogId === undefined || chargingLogId === null) {
        throw new Error("Missing the required parameter 'chargingLogId' when calling refundUsingPOST");
      }


      var pathParams = {
        'chargingLogId': chargingLogId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ChargingLog;

      return this.apiClient.callApi(
        '/api/charging-logs/refund/{chargingLogId}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChargingLogUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~updateChargingLogUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateChargingLog
     * @param {module:com.kodfarki.subscreasy.client.model/ChargingLog} chargingLog chargingLog
     * @param {module:com.kodfarki.subscreasy.client/ChargingLogResourceApi~updateChargingLogUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ChargingLog}
     */
    this.updateChargingLogUsingPUT = function(chargingLog, callback) {
      var postBody = chargingLog;

      // verify the required parameter 'chargingLog' is set
      if (chargingLog === undefined || chargingLog === null) {
        throw new Error("Missing the required parameter 'chargingLog' when calling updateChargingLogUsingPUT");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ChargingLog;

      return this.apiClient.callApi(
        '/api/charging-logs', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
