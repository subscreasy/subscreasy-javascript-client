/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CompanyProps from '../com.kodfarki.subscreasy.client.model/CompanyProps';

/**
* CompanyPropsResource service.
* @module com.kodfarki.subscreasy.client/CompanyPropsResourceApi
* @version 1.0.0
*/
export default class CompanyPropsResourceApi {

    /**
    * Constructs a new CompanyPropsResourceApi. 
    * @alias module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCompanyPropsUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~createCompanyPropsUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/CompanyProps} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createCompanyProps
     * @param {module:com.kodfarki.subscreasy.client.model/CompanyProps} companyProps companyProps
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~createCompanyPropsUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/CompanyProps}
     */
    createCompanyPropsUsingPOST(companyProps, callback) {
      let postBody = companyProps;
      // verify the required parameter 'companyProps' is set
      if (companyProps === undefined || companyProps === null) {
        throw new Error("Missing the required parameter 'companyProps' when calling createCompanyPropsUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CompanyProps;
      return this.apiClient.callApi(
        '/api/company-props', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCompanyPropsUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~deleteCompanyPropsUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteCompanyProps
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~deleteCompanyPropsUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCompanyPropsUsingDELETE(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteCompanyPropsUsingDELETE");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/company-props/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllCompanyPropsUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~getAllCompanyPropsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/CompanyProps>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllCompanyProps
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~getAllCompanyPropsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/CompanyProps>}
     */
    getAllCompanyPropsUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [CompanyProps];
      return this.apiClient.callApi(
        '/api/company-props', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompanyPropsByCompanyIdUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~getCompanyPropsByCompanyIdUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/CompanyProps} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getCompanyPropsByCompanyId
     * @param {Number} companyId companyId
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~getCompanyPropsByCompanyIdUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/CompanyProps}
     */
    getCompanyPropsByCompanyIdUsingGET(companyId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompanyPropsByCompanyIdUsingGET");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CompanyProps;
      return this.apiClient.callApi(
        '/api/company-props/company/{companyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCompanyPropsUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~updateCompanyPropsUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/CompanyProps} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateCompanyProps
     * @param {module:com.kodfarki.subscreasy.client.model/CompanyProps} companyProps companyProps
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~updateCompanyPropsUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/CompanyProps}
     */
    updateCompanyPropsUsingPUT(companyProps, callback) {
      let postBody = companyProps;
      // verify the required parameter 'companyProps' is set
      if (companyProps === undefined || companyProps === null) {
        throw new Error("Missing the required parameter 'companyProps' when calling updateCompanyPropsUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CompanyProps;
      return this.apiClient.callApi(
        '/api/company-props', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uploadCSSUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~uploadCSSUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * uploadCSS
     * @param {File} file file
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~uploadCSSUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    uploadCSSUsingPOST(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling uploadCSSUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['apiKey'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/company-props/uploadCSS', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uploadFileUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~uploadFileUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * uploadFile
     * @param {File} file file
     * @param {module:com.kodfarki.subscreasy.client/CompanyPropsResourceApi~uploadFileUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    uploadFileUsingPOST(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling uploadFileUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['apiKey'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/company-props/uploadFile', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
