/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.kodfarki.subscreasy.client.model/Subscriber'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../com.kodfarki.subscreasy.client.model/Subscriber'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.SubscriberResourceApi = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.Subscriber);
  }
}(this, function(ApiClient, Subscriber) {
  'use strict';

  /**
   * SubscriberResource service.
   * @module com.kodfarki.subscreasy.client/SubscriberResourceApi
   * @version 1.0
   */

  /**
   * Constructs a new SubscriberResourceApi. 
   * @alias module:com.kodfarki.subscreasy.client/SubscriberResourceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createSubscriberUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~createSubscriberUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Subscriber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createSubscriber
     * @param {module:com.kodfarki.subscreasy.client.model/Subscriber} subscriber subscriber
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~createSubscriberUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Subscriber}
     */
    this.createSubscriberUsingPOST = function(subscriber, callback) {
      var postBody = subscriber;

      // verify the required parameter 'subscriber' is set
      if (subscriber === undefined || subscriber === null) {
        throw new Error("Missing the required parameter 'subscriber' when calling createSubscriberUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = Subscriber;

      return this.apiClient.callApi(
        '/api/subscribers', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSubscriberUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~deleteSubscriberUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteSubscriber
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~deleteSubscriberUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteSubscriberUsingDELETE = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteSubscriberUsingDELETE");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/subscribers/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllSubscribersUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getAllSubscribersUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllSubscribers
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getAllSubscribersUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>}
     */
    this.getAllSubscribersUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [Subscriber];

      return this.apiClient.callApi(
        '/api/subscribers', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSubscriberByEmailUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberByEmailUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getSubscriberByEmail
     * @param {String} email email
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberByEmailUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>}
     */
    this.getSubscriberByEmailUsingGET = function(email, callback) {
      var postBody = null;

      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling getSubscriberByEmailUsingGET");
      }


      var pathParams = {
        'email': email
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [Subscriber];

      return this.apiClient.callApi(
        '/api/subscribers/email/{email}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSubscriberByNameUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberByNameUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getSubscriberByName
     * @param {String} name name
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberByNameUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/Subscriber>}
     */
    this.getSubscriberByNameUsingGET = function(name, callback) {
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling getSubscriberByNameUsingGET");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [Subscriber];

      return this.apiClient.callApi(
        '/api/subscribers/name/{name}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSubscriberUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Subscriber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getSubscriber
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~getSubscriberUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Subscriber}
     */
    this.getSubscriberUsingGET = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getSubscriberUsingGET");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = Subscriber;

      return this.apiClient.callApi(
        '/api/subscribers/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSubscriberUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/SubscriberResourceApi~updateSubscriberUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Subscriber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateSubscriber
     * @param {module:com.kodfarki.subscreasy.client.model/Subscriber} subscriber subscriber
     * @param {module:com.kodfarki.subscreasy.client/SubscriberResourceApi~updateSubscriberUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Subscriber}
     */
    this.updateSubscriberUsingPUT = function(subscriber, callback) {
      var postBody = subscriber;

      // verify the required parameter 'subscriber' is set
      if (subscriber === undefined || subscriber === null) {
        throw new Error("Missing the required parameter 'subscriber' when calling updateSubscriberUsingPUT");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = Subscriber;

      return this.apiClient.callApi(
        '/api/subscribers', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
