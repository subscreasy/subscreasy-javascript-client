/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MessageTemplate from '../com.kodfarki.subscreasy.client.model/MessageTemplate';

/**
* MessageTemplateResource service.
* @module com.kodfarki.subscreasy.client/MessageTemplateResourceApi
* @version 1.0.0
*/
export default class MessageTemplateResourceApi {

    /**
    * Constructs a new MessageTemplateResourceApi. 
    * @alias module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMessageTemplateUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~createMessageTemplateUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createMessageTemplate
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} messageTemplate messageTemplate
     * @param {module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~createMessageTemplateUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/MessageTemplate}
     */
    createMessageTemplateUsingPOST(messageTemplate, callback) {
      let postBody = messageTemplate;
      // verify the required parameter 'messageTemplate' is set
      if (messageTemplate === undefined || messageTemplate === null) {
        throw new Error("Missing the required parameter 'messageTemplate' when calling createMessageTemplateUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MessageTemplate;
      return this.apiClient.callApi(
        '/api/message-templates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMessageTemplateUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~deleteMessageTemplateUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteMessageTemplate
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~deleteMessageTemplateUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMessageTemplateUsingDELETE(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteMessageTemplateUsingDELETE");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/message-templates/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllMessageTemplatesUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~getAllMessageTemplatesUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/MessageTemplate>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllMessageTemplates
     * @param {module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~getAllMessageTemplatesUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/MessageTemplate>}
     */
    getAllMessageTemplatesUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [MessageTemplate];
      return this.apiClient.callApi(
        '/api/message-templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMessageTemplateUsingGET1 operation.
     * @callback module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~getMessageTemplateUsingGET1Callback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getMessageTemplate
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~getMessageTemplateUsingGET1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/MessageTemplate}
     */
    getMessageTemplateUsingGET1(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getMessageTemplateUsingGET1");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = MessageTemplate;
      return this.apiClient.callApi(
        '/api/message-templates/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMessageTemplateUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~updateMessageTemplateUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateMessageTemplate
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} messageTemplate messageTemplate
     * @param {module:com.kodfarki.subscreasy.client/MessageTemplateResourceApi~updateMessageTemplateUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/MessageTemplate}
     */
    updateMessageTemplateUsingPUT(messageTemplate, callback) {
      let postBody = messageTemplate;
      // verify the required parameter 'messageTemplate' is set
      if (messageTemplate === undefined || messageTemplate === null) {
        throw new Error("Missing the required parameter 'messageTemplate' when calling updateMessageTemplateUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MessageTemplate;
      return this.apiClient.callApi(
        '/api/message-templates', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
