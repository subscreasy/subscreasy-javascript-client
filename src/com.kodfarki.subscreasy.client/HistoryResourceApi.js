/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.kodfarki.subscreasy.client.model/History'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../com.kodfarki.subscreasy.client.model/History'));
  } else {
    // Browser globals (root is window)
    if (!root.SubscreasyJsClient) {
      root.SubscreasyJsClient = {};
    }
    root.SubscreasyJsClient.HistoryResourceApi = factory(root.SubscreasyJsClient.ApiClient, root.SubscreasyJsClient.History);
  }
}(this, function(ApiClient, History) {
  'use strict';

  /**
   * HistoryResource service.
   * @module com.kodfarki.subscreasy.client/HistoryResourceApi
   * @version 1.0.0
   */

  /**
   * Constructs a new HistoryResourceApi. 
   * @alias module:com.kodfarki.subscreasy.client/HistoryResourceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createHistoryUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/HistoryResourceApi~createHistoryUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/History} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createHistory
     * @param {module:com.kodfarki.subscreasy.client.model/History} history history
     * @param {module:com.kodfarki.subscreasy.client/HistoryResourceApi~createHistoryUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/History}
     */
    this.createHistoryUsingPOST = function(history, callback) {
      var postBody = history;

      // verify the required parameter 'history' is set
      if (history === undefined || history === null) {
        throw new Error("Missing the required parameter 'history' when calling createHistoryUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = History;

      return this.apiClient.callApi(
        '/api/histories', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteHistoryUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/HistoryResourceApi~deleteHistoryUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteHistory
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/HistoryResourceApi~deleteHistoryUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteHistoryUsingDELETE = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteHistoryUsingDELETE");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/histories/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllHistoriesUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/HistoryResourceApi~getAllHistoriesUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/History>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllHistories
     * @param {module:com.kodfarki.subscreasy.client/HistoryResourceApi~getAllHistoriesUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/History>}
     */
    this.getAllHistoriesUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [History];

      return this.apiClient.callApi(
        '/api/histories', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getHistoryUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/HistoryResourceApi~getHistoryUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/History} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getHistory
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/HistoryResourceApi~getHistoryUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/History}
     */
    this.getHistoryUsingGET = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getHistoryUsingGET");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = History;

      return this.apiClient.callApi(
        '/api/histories/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateHistoryUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/HistoryResourceApi~updateHistoryUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/History} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateHistory
     * @param {module:com.kodfarki.subscreasy.client.model/History} history history
     * @param {module:com.kodfarki.subscreasy.client/HistoryResourceApi~updateHistoryUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/History}
     */
    this.updateHistoryUsingPUT = function(history, callback) {
      var postBody = history;

      // verify the required parameter 'history' is set
      if (history === undefined || history === null) {
        throw new Error("Missing the required parameter 'history' when calling updateHistoryUsingPUT");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = History;

      return this.apiClient.callApi(
        '/api/histories', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
