/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Offer from '../com.kodfarki.subscreasy.client.model/Offer';

/**
* OfferResource service.
* @module com.kodfarki.subscreasy.client/OfferResourceApi
* @version 1.0.0
*/
export default class OfferResourceApi {

    /**
    * Constructs a new OfferResourceApi. 
    * @alias module:com.kodfarki.subscreasy.client/OfferResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the archiveOfferUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~archiveOfferUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * archiveOffer
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~archiveOfferUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     */
    archiveOfferUsingPUT(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling archiveOfferUsingPUT");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/offers/archive/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createOfferUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~createOfferUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createOffer
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} offer offer
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~createOfferUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Offer}
     */
    createOfferUsingPOST(offer, callback) {
      let postBody = offer;
      // verify the required parameter 'offer' is set
      if (offer === undefined || offer === null) {
        throw new Error("Missing the required parameter 'offer' when calling createOfferUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/api/offers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOfferUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~deleteOfferUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteOffer
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~deleteOfferUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOfferUsingDELETE(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteOfferUsingDELETE");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/offers/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllOffersUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~getAllOffersUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/Offer>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllOffers
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~getAllOffersUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/Offer>}
     */
    getAllOffersUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [Offer];
      return this.apiClient.callApi(
        '/api/offers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOfferUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~getOfferUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getOffer
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~getOfferUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Offer}
     */
    getOfferUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOfferUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/api/offers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sendOfferPriceChangedEmailUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~sendOfferPriceChangedEmailUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * sendOfferPriceChangedEmail
     * @param {Number} offerId offerId
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~sendOfferPriceChangedEmailUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sendOfferPriceChangedEmailUsingPUT(offerId, callback) {
      let postBody = null;
      // verify the required parameter 'offerId' is set
      if (offerId === undefined || offerId === null) {
        throw new Error("Missing the required parameter 'offerId' when calling sendOfferPriceChangedEmailUsingPUT");
      }

      let pathParams = {
        'offerId': offerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/offers/sendOfferPriceChangedEmail/{offerId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOfferUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~updateOfferUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateOffer
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} offer offer
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~updateOfferUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Offer}
     */
    updateOfferUsingPUT(offer, callback) {
      let postBody = offer;
      // verify the required parameter 'offer' is set
      if (offer === undefined || offer === null) {
        throw new Error("Missing the required parameter 'offer' when calling updateOfferUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/api/offers', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uploadFileUsingPOST1 operation.
     * @callback module:com.kodfarki.subscreasy.client/OfferResourceApi~uploadFileUsingPOST1Callback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * uploadFile
     * @param {Number} offerId offerId
     * @param {File} file file
     * @param {module:com.kodfarki.subscreasy.client/OfferResourceApi~uploadFileUsingPOST1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/Offer}
     */
    uploadFileUsingPOST1(offerId, file, callback) {
      let postBody = null;
      // verify the required parameter 'offerId' is set
      if (offerId === undefined || offerId === null) {
        throw new Error("Missing the required parameter 'offerId' when calling uploadFileUsingPOST1");
      }
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling uploadFileUsingPOST1");
      }

      let pathParams = {
        'offerId': offerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['apiKey'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['*/*'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/api/offers/uploadFile/{offerId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
