/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.kodfarki.subscreasy.client.model/ServiceOffering'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../com.kodfarki.subscreasy.client.model/ServiceOffering'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.ServiceOfferingResourceApi = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.ServiceOffering);
  }
}(this, function(ApiClient, ServiceOffering) {
  'use strict';

  /**
   * ServiceOfferingResource service.
   * @module com.kodfarki.subscreasy.client/ServiceOfferingResourceApi
   * @version 1.0
   */

  /**
   * Constructs a new ServiceOfferingResourceApi. 
   * @alias module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createServiceOfferingUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~createServiceOfferingUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ServiceOffering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createServiceOffering
     * @param {module:com.kodfarki.subscreasy.client.model/ServiceOffering} serviceOffering serviceOffering
     * @param {module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~createServiceOfferingUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ServiceOffering}
     */
    this.createServiceOfferingUsingPOST = function(serviceOffering, callback) {
      var postBody = serviceOffering;

      // verify the required parameter 'serviceOffering' is set
      if (serviceOffering === undefined || serviceOffering === null) {
        throw new Error("Missing the required parameter 'serviceOffering' when calling createServiceOfferingUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ServiceOffering;

      return this.apiClient.callApi(
        '/api/service-offerings', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteServiceOfferingUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~deleteServiceOfferingUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteServiceOffering
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~deleteServiceOfferingUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteServiceOfferingUsingDELETE = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteServiceOfferingUsingDELETE");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/service-offerings/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllServiceOfferingsUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~getAllServiceOfferingsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ServiceOffering>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllServiceOfferings
     * @param {module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~getAllServiceOfferingsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ServiceOffering>}
     */
    this.getAllServiceOfferingsUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = [ServiceOffering];

      return this.apiClient.callApi(
        '/api/service-offerings', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceOfferingUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~getServiceOfferingUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ServiceOffering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getServiceOffering
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~getServiceOfferingUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ServiceOffering}
     */
    this.getServiceOfferingUsingGET = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getServiceOfferingUsingGET");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = ServiceOffering;

      return this.apiClient.callApi(
        '/api/service-offerings/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateServiceOfferingUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~updateServiceOfferingUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ServiceOffering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateServiceOffering
     * @param {module:com.kodfarki.subscreasy.client.model/ServiceOffering} serviceOffering serviceOffering
     * @param {module:com.kodfarki.subscreasy.client/ServiceOfferingResourceApi~updateServiceOfferingUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ServiceOffering}
     */
    this.updateServiceOfferingUsingPUT = function(serviceOffering, callback) {
      var postBody = serviceOffering;

      // verify the required parameter 'serviceOffering' is set
      if (serviceOffering === undefined || serviceOffering === null) {
        throw new Error("Missing the required parameter 'serviceOffering' when calling updateServiceOfferingUsingPUT");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ServiceOffering;

      return this.apiClient.callApi(
        '/api/service-offerings', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
