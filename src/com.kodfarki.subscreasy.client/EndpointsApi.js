/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Authorization from '../com.kodfarki.subscreasy.client.model/Authorization';
import AuthorizedServicesResponse from '../com.kodfarki.subscreasy.client.model/AuthorizedServicesResponse';
import Deduction from '../com.kodfarki.subscreasy.client.model/Deduction';
import DeductionResult from '../com.kodfarki.subscreasy.client.model/DeductionResult';
import InvoiceRequest from '../com.kodfarki.subscreasy.client.model/InvoiceRequest';
import MessageTemplate from '../com.kodfarki.subscreasy.client.model/MessageTemplate';
import ServiceInstanceResult from '../com.kodfarki.subscreasy.client.model/ServiceInstanceResult';
import ServiceOfferingResult from '../com.kodfarki.subscreasy.client.model/ServiceOfferingResult';

/**
* Endpoints service.
* @module com.kodfarki.subscreasy.client/EndpointsApi
* @version 1.0.0
*/
export default class EndpointsApi {

    /**
    * Constructs a new EndpointsApi. 
    * @alias module:com.kodfarki.subscreasy.client/EndpointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authorizeUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~authorizeUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * authorize
     * @param {module:com.kodfarki.subscreasy.client.model/Authorization} authorization authorization
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~authorizeUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    authorizeUsingPUT(authorization, callback) {
      let postBody = authorization;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling authorizeUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/api/authorize', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deductUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~deductUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/DeductionResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deduct
     * @param {module:com.kodfarki.subscreasy.client.model/Deduction} deduction deduction
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~deductUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/DeductionResult}
     */
    deductUsingPUT(deduction, callback) {
      let postBody = deduction;
      // verify the required parameter 'deduction' is set
      if (deduction === undefined || deduction === null) {
        throw new Error("Missing the required parameter 'deduction' when calling deductUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeductionResult;
      return this.apiClient.callApi(
        '/api/deduct', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAuthorizedServicesUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getAuthorizedServicesUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/AuthorizedServicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAuthorizedServices
     * @param {String} secureId secureId
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getAuthorizedServicesUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/AuthorizedServicesResponse}
     */
    getAuthorizedServicesUsingGET(secureId, callback) {
      let postBody = null;
      // verify the required parameter 'secureId' is set
      if (secureId === undefined || secureId === null) {
        throw new Error("Missing the required parameter 'secureId' when calling getAuthorizedServicesUsingGET");
      }

      let pathParams = {
        'secureId': secureId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = AuthorizedServicesResponse;
      return this.apiClient.callApi(
        '/api/service/subscriber/{secureId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCustomerTotalAmountUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getCustomerTotalAmountUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getCustomerTotalAmount
     * @param {String} id id
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getCustomerTotalAmountUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    getCustomerTotalAmountUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getCustomerTotalAmountUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/customer-totalAmountCharge/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvoiceDetailsUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getInvoiceDetailsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getInvoiceDetails
     * @param {module:com.kodfarki.subscreasy.client.model/InvoiceRequest} invoiceRequest invoiceRequest
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getInvoiceDetailsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getInvoiceDetailsUsingGET(invoiceRequest, callback) {
      let postBody = invoiceRequest;
      // verify the required parameter 'invoiceRequest' is set
      if (invoiceRequest === undefined || invoiceRequest === null) {
        throw new Error("Missing the required parameter 'invoiceRequest' when calling getInvoiceDetailsUsingGET");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/getInvoiceDetails', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMessageTemplateUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getMessageTemplateUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/MessageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getMessageTemplate
     * @param {String} lifecycleEventName lifecycleEventName
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getMessageTemplateUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/MessageTemplate}
     */
    getMessageTemplateUsingGET(lifecycleEventName, callback) {
      let postBody = null;
      // verify the required parameter 'lifecycleEventName' is set
      if (lifecycleEventName === undefined || lifecycleEventName === null) {
        throw new Error("Missing the required parameter 'lifecycleEventName' when calling getMessageTemplateUsingGET");
      }

      let pathParams = {
        'lifecycleEventName': lifecycleEventName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = MessageTemplate;
      return this.apiClient.callApi(
        '/api/message-templates/email/{lifecycleEventName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceInstancesBySubscriptionUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getServiceInstancesBySubscriptionUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ServiceInstanceResult>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getServiceInstancesBySubscription
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getServiceInstancesBySubscriptionUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ServiceInstanceResult>}
     */
    getServiceInstancesBySubscriptionUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getServiceInstancesBySubscriptionUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ServiceInstanceResult];
      return this.apiClient.callApi(
        '/api/service-instances/subscription/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceOfferingsBySubscriptionPlanUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getServiceOfferingsBySubscriptionPlanUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/ServiceOfferingResult>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getServiceOfferingsBySubscriptionPlan
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getServiceOfferingsBySubscriptionPlanUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/ServiceOfferingResult>}
     */
    getServiceOfferingsBySubscriptionPlanUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getServiceOfferingsBySubscriptionPlanUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [ServiceOfferingResult];
      return this.apiClient.callApi(
        '/api/service-offerings/offer/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTotalRevenuePerMonthUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/EndpointsApi~getTotalRevenuePerMonthUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getTotalRevenuePerMonth
     * @param {Number} id id
     * @param {module:com.kodfarki.subscreasy.client/EndpointsApi~getTotalRevenuePerMonthUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getTotalRevenuePerMonthUsingGET(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getTotalRevenuePerMonthUsingGET");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/api/charging-logs-totalamount-customer/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
