/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ManagedUserVM from '../com.kodfarki.subscreasy.client.model/ManagedUserVM';
import ResponseEntity from '../com.kodfarki.subscreasy.client.model/ResponseEntity';
import User from '../com.kodfarki.subscreasy.client.model/User';
import UserDTO from '../com.kodfarki.subscreasy.client.model/UserDTO';

/**
* UserResource service.
* @module com.kodfarki.subscreasy.client/UserResourceApi
* @version 1.0.0
*/
export default class UserResourceApi {

    /**
    * Constructs a new UserResourceApi. 
    * @alias module:com.kodfarki.subscreasy.client/UserResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCompanyUserUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~createCompanyUserUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ResponseEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createCompanyUser
     * @param {module:com.kodfarki.subscreasy.client.model/ManagedUserVM} managedUserVM managedUserVM
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~createCompanyUserUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ResponseEntity}
     */
    createCompanyUserUsingPOST(managedUserVM, callback) {
      let postBody = managedUserVM;
      // verify the required parameter 'managedUserVM' is set
      if (managedUserVM === undefined || managedUserVM === null) {
        throw new Error("Missing the required parameter 'managedUserVM' when calling createCompanyUserUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResponseEntity;
      return this.apiClient.callApi(
        '/api/users/company', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createUserUsingPOST operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~createUserUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/ResponseEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createUser
     * @param {module:com.kodfarki.subscreasy.client.model/ManagedUserVM} managedUserVM managedUserVM
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~createUserUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/ResponseEntity}
     */
    createUserUsingPOST(managedUserVM, callback) {
      let postBody = managedUserVM;
      // verify the required parameter 'managedUserVM' is set
      if (managedUserVM === undefined || managedUserVM === null) {
        throw new Error("Missing the required parameter 'managedUserVM' when calling createUserUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResponseEntity;
      return this.apiClient.callApi(
        '/api/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteUserUsingDELETE operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~deleteUserUsingDELETECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deleteUser
     * @param {String} login login
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~deleteUserUsingDELETECallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteUserUsingDELETE(login, callback) {
      let postBody = null;
      // verify the required parameter 'login' is set
      if (login === undefined || login === null) {
        throw new Error("Missing the required parameter 'login' when calling deleteUserUsingDELETE");
      }

      let pathParams = {
        'login': login
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/users/{login}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllUsersByAuthenticatedCompanyUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersByAuthenticatedCompanyUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/User>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllUsersByAuthenticatedCompany
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersByAuthenticatedCompanyUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/User>}
     */
    getAllUsersByAuthenticatedCompanyUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [User];
      return this.apiClient.callApi(
        '/api/users/company', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllUsersByCompanyIdUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersByCompanyIdUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/User>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllUsersByCompanyId
     * @param {Number} companyId companyId
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersByCompanyIdUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/User>}
     */
    getAllUsersByCompanyIdUsingGET(companyId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getAllUsersByCompanyIdUsingGET");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [User];
      return this.apiClient.callApi(
        '/api/users/company/{companyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllUsersUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.kodfarki.subscreasy.client.model/User>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllUsers
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number of the requested page
     * @param {Number} opts.size Size of a page
     * @param {Array.<String>} opts.sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~getAllUsersUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.kodfarki.subscreasy.client.model/User>}
     */
    getAllUsersUsingGET(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [User];
      return this.apiClient.callApi(
        '/api/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAuthoritiesUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~getAuthoritiesUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAuthorities
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~getAuthoritiesUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    getAuthoritiesUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/api/users/authorities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUserUsingGET operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~getUserUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/UserDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getUser
     * @param {String} login login
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~getUserUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/UserDTO}
     */
    getUserUsingGET(login, callback) {
      let postBody = null;
      // verify the required parameter 'login' is set
      if (login === undefined || login === null) {
        throw new Error("Missing the required parameter 'login' when calling getUserUsingGET");
      }

      let pathParams = {
        'login': login
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UserDTO;
      return this.apiClient.callApi(
        '/api/users/{login}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUserUsingPUT operation.
     * @callback module:com.kodfarki.subscreasy.client/UserResourceApi~updateUserUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:com.kodfarki.subscreasy.client.model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateUser
     * @param {module:com.kodfarki.subscreasy.client.model/ManagedUserVM} managedUserVM managedUserVM
     * @param {module:com.kodfarki.subscreasy.client/UserResourceApi~updateUserUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.kodfarki.subscreasy.client.model/User}
     */
    updateUserUsingPUT(managedUserVM, callback) {
      let postBody = managedUserVM;
      // verify the required parameter 'managedUserVM' is set
      if (managedUserVM === undefined || managedUserVM === null) {
        throw new Error("Missing the required parameter 'managedUserVM' when calling updateUserUsingPUT");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = User;
      return this.apiClient.callApi(
        '/api/users', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
