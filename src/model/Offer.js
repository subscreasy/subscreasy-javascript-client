/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Company', 'model/Product', 'model/RecurrencePeriod'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Company'), require('./Product'), require('./RecurrencePeriod'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.Offer = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.Company, root.ApiDocumentation.Product, root.ApiDocumentation.RecurrencePeriod);
  }
}(this, function(ApiClient, Company, Product, RecurrencePeriod) {
  'use strict';




  /**
   * The Offer model module.
   * @module model/Offer
   * @version 1.0
   */

  /**
   * Constructs a new <code>Offer</code>.
   * @alias module:model/Offer
   * @class
   * @param company {module:model/Company} 
   * @param name {String} 
   * @param openEnded {Boolean} 
   * @param price {Number} 
   */
  var exports = function(company, name, openEnded, price) {
    var _this = this;

    _this['company'] = company;

    _this['name'] = name;
    _this['openEnded'] = openEnded;
    _this['price'] = price;






  };

  /**
   * Constructs a <code>Offer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Offer} obj Optional instance to populate.
   * @return {module:model/Offer} The populated <code>Offer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('company')) {
        obj['company'] = Company.constructFromObject(data['company']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('openEnded')) {
        obj['openEnded'] = ApiClient.convertToType(data['openEnded'], 'Boolean');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('product')) {
        obj['product'] = Product.constructFromObject(data['product']);
      }
      if (data.hasOwnProperty('purchaseType')) {
        obj['purchaseType'] = ApiClient.convertToType(data['purchaseType'], 'String');
      }
      if (data.hasOwnProperty('recurrence')) {
        obj['recurrence'] = RecurrencePeriod.constructFromObject(data['recurrence']);
      }
      if (data.hasOwnProperty('recurrenceCount')) {
        obj['recurrenceCount'] = ApiClient.convertToType(data['recurrenceCount'], 'Number');
      }
      if (data.hasOwnProperty('secureId')) {
        obj['secureId'] = ApiClient.convertToType(data['secureId'], 'String');
      }
      if (data.hasOwnProperty('trialPeriod')) {
        obj['trialPeriod'] = ApiClient.convertToType(data['trialPeriod'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Company} company
   */
  exports.prototype['company'] = undefined;
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Boolean} openEnded
   */
  exports.prototype['openEnded'] = undefined;
  /**
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * @member {module:model/Product} product
   */
  exports.prototype['product'] = undefined;
  /**
   * @member {module:model/Offer.PurchaseTypeEnum} purchaseType
   */
  exports.prototype['purchaseType'] = undefined;
  /**
   * @member {module:model/RecurrencePeriod} recurrence
   */
  exports.prototype['recurrence'] = undefined;
  /**
   * @member {Number} recurrenceCount
   */
  exports.prototype['recurrenceCount'] = undefined;
  /**
   * @member {String} secureId
   */
  exports.prototype['secureId'] = undefined;
  /**
   * @member {Number} trialPeriod
   */
  exports.prototype['trialPeriod'] = undefined;


  /**
   * Allowed values for the <code>purchaseType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PurchaseTypeEnum = {
    /**
     * value: "ONCE"
     * @const
     */
    "ONCE": "ONCE",
    /**
     * value: "SUBSCRIPTION"
     * @const
     */
    "SUBSCRIPTION": "SUBSCRIPTION"  };


  return exports;
}));


